//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ROMPCheckIn.cms.romponline.com {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ROMPLocationSoap", Namespace="http://tempuri.org/")]
    public partial class ROMPLocation : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ROMPLocation() {
			this.Url = "http://54.83.199.58:80/romplocservice/ROMPLocation.asmx";
        }
        
        public ROMPLocation(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LearnerLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoginResponse LearnerLogin(string user, string pass) {
            object[] results = this.Invoke("LearnerLogin", new object[] {
                        user,
                        pass});
            return ((LoginResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLearnerLogin(string user, string pass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LearnerLogin", new object[] {
                        user,
                        pass}, callback, asyncState);
        }
        
        /// <remarks/>
        public LoginResponse EndLearnerLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LoginResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckSession(string sessionKey) {
            object[] results = this.Invoke("CheckSession", new object[] {
                        sessionKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckSession(string sessionKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckSession", new object[] {
                        sessionKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckSession(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FacilityCoordinates[] GetLocations(string sessionKey, int grpID) {
            object[] results = this.Invoke("GetLocations", new object[] {
                        sessionKey,
                        grpID});
            return ((FacilityCoordinates[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLocations(string sessionKey, int grpID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLocations", new object[] {
                        sessionKey,
                        grpID}, callback, asyncState);
        }
        
        /// <remarks/>
        public FacilityCoordinates[] EndGetLocations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FacilityCoordinates[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckInWithLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckInWithLocation(string sessionKey, int locID, double locLat, double locLong) {
            object[] results = this.Invoke("CheckInWithLocation", new object[] {
                        sessionKey,
                        locID,
                        locLat,
                        locLong});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckInWithLocation(string sessionKey, int locID, double locLat, double locLong, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckInWithLocation", new object[] {
                        sessionKey,
                        locID,
                        locLat,
                        locLong}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCheckInWithLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckIn(string sessionKey, int locID) {
            object[] results = this.Invoke("CheckIn", new object[] {
                        sessionKey,
                        locID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckIn(string sessionKey, int locID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckIn", new object[] {
                        sessionKey,
                        locID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCheckIn(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckOut(string sessionKey, int locID) {
            object[] results = this.Invoke("CheckOut", new object[] {
                        sessionKey,
                        locID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckOut(string sessionKey, int locID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckOut", new object[] {
                        sessionKey,
                        locID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCheckOut(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOutWithoutLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckOutWithoutLocation(string sessionKey) {
            object[] results = this.Invoke("CheckOutWithoutLocation", new object[] {
                        sessionKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckOutWithoutLocation(string sessionKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckOutWithoutLocation", new object[] {
                        sessionKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCheckOutWithoutLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LoginResponse {
        
        /// <remarks/>
        public bool Success;
        
        /// <remarks/>
        public string SessionKey;
        
        /// <remarks/>
        public int GroupID;
        
        /// <remarks/>
        public int UserID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilityCoordinates {
        
        /// <remarks/>
        public double Latitude;
        
        /// <remarks/>
        public double Longitude;
        
        /// <remarks/>
        public string LocationName;
        
        /// <remarks/>
        public int LocationID;
    }
}
