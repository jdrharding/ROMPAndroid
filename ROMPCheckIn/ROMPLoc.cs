//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace ROMPLocationService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResponse", Namespace="http://schemas.datacontract.org/2004/07/ROMPLocationService")]
    public partial class LoginResponse : object
    {
        
        private string SessionKeyField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionKey
        {
            get
            {
                return this.SessionKeyField;
            }
            set
            {
                this.SessionKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                this.SuccessField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacilityCoordinates", Namespace="http://schemas.datacontract.org/2004/07/ROMPLocationService")]
    public partial class FacilityCoordinates : object
    {
        
        private double LatValueField;
        
        private int LocIDField;
        
        private string LocNameValueField;
        
        private double LongValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LatValue
        {
            get
            {
                return this.LatValueField;
            }
            set
            {
                this.LatValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocID
        {
            get
            {
                return this.LocIDField;
            }
            set
            {
                this.LocIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocNameValue
        {
            get
            {
                return this.LocNameValueField;
            }
            set
            {
                this.LocNameValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LongValue
        {
            get
            {
                return this.LongValueField;
            }
            set
            {
                this.LongValueField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IRompLoc")]
public interface IRompLoc
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRompLoc/LearnerLogin", ReplyAction="http://tempuri.org/IRompLoc/LearnerLoginResponse")]
    System.IAsyncResult BeginLearnerLogin(string user, string pass, System.AsyncCallback callback, object asyncState);
    
    ROMPLocationService.LoginResponse EndLearnerLogin(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRompLoc/GetLocations", ReplyAction="http://tempuri.org/IRompLoc/GetLocationsResponse")]
    System.IAsyncResult BeginGetLocations(string sessionKey, System.AsyncCallback callback, object asyncState);
    
    ROMPLocationService.FacilityCoordinates[] EndGetLocations(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRompLoc/CheckIn", ReplyAction="http://tempuri.org/IRompLoc/CheckInResponse")]
    System.IAsyncResult BeginCheckIn(string sessionKey, int locID, int entity_id, System.AsyncCallback callback, object asyncState);
    
    string EndCheckIn(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IRompLocChannel : IRompLoc, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class LearnerLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public LearnerLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public ROMPLocationService.LoginResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((ROMPLocationService.LoginResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public ROMPLocationService.FacilityCoordinates[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((ROMPLocationService.FacilityCoordinates[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CheckInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public CheckInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RompLocClient : System.ServiceModel.ClientBase<IRompLoc>, IRompLoc
{
    
    private BeginOperationDelegate onBeginLearnerLoginDelegate;
    
    private EndOperationDelegate onEndLearnerLoginDelegate;
    
    private System.Threading.SendOrPostCallback onLearnerLoginCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetLocationsDelegate;
    
    private EndOperationDelegate onEndGetLocationsDelegate;
    
    private System.Threading.SendOrPostCallback onGetLocationsCompletedDelegate;
    
    private BeginOperationDelegate onBeginCheckInDelegate;
    
    private EndOperationDelegate onEndCheckInDelegate;
    
    private System.Threading.SendOrPostCallback onCheckInCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public RompLocClient()
    {
    }
    
    public RompLocClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public RompLocClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RompLocClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RompLocClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<LearnerLoginCompletedEventArgs> LearnerLoginCompleted;
    
    public event System.EventHandler<GetLocationsCompletedEventArgs> GetLocationsCompleted;
    
    public event System.EventHandler<CheckInCompletedEventArgs> CheckInCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IRompLoc.BeginLearnerLogin(string user, string pass, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginLearnerLogin(user, pass, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    ROMPLocationService.LoginResponse IRompLoc.EndLearnerLogin(System.IAsyncResult result)
    {
        return base.Channel.EndLearnerLogin(result);
    }
    
    private System.IAsyncResult OnBeginLearnerLogin(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string user = ((string)(inValues[0]));
        string pass = ((string)(inValues[1]));
        return ((IRompLoc)(this)).BeginLearnerLogin(user, pass, callback, asyncState);
    }
    
    private object[] OnEndLearnerLogin(System.IAsyncResult result)
    {
        ROMPLocationService.LoginResponse retVal = ((IRompLoc)(this)).EndLearnerLogin(result);
        return new object[] {
                retVal};
    }
    
    private void OnLearnerLoginCompleted(object state)
    {
        if ((this.LearnerLoginCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.LearnerLoginCompleted(this, new LearnerLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void LearnerLoginAsync(string user, string pass)
    {
        this.LearnerLoginAsync(user, pass, null);
    }
    
    public void LearnerLoginAsync(string user, string pass, object userState)
    {
        if ((this.onBeginLearnerLoginDelegate == null))
        {
            this.onBeginLearnerLoginDelegate = new BeginOperationDelegate(this.OnBeginLearnerLogin);
        }
        if ((this.onEndLearnerLoginDelegate == null))
        {
            this.onEndLearnerLoginDelegate = new EndOperationDelegate(this.OnEndLearnerLogin);
        }
        if ((this.onLearnerLoginCompletedDelegate == null))
        {
            this.onLearnerLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLearnerLoginCompleted);
        }
        base.InvokeAsync(this.onBeginLearnerLoginDelegate, new object[] {
                    user,
                    pass}, this.onEndLearnerLoginDelegate, this.onLearnerLoginCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IRompLoc.BeginGetLocations(string sessionKey, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetLocations(sessionKey, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    ROMPLocationService.FacilityCoordinates[] IRompLoc.EndGetLocations(System.IAsyncResult result)
    {
        return base.Channel.EndGetLocations(result);
    }
    
    private System.IAsyncResult OnBeginGetLocations(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string sessionKey = ((string)(inValues[0]));
        return ((IRompLoc)(this)).BeginGetLocations(sessionKey, callback, asyncState);
    }
    
    private object[] OnEndGetLocations(System.IAsyncResult result)
    {
        ROMPLocationService.FacilityCoordinates[] retVal = ((IRompLoc)(this)).EndGetLocations(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetLocationsCompleted(object state)
    {
        if ((this.GetLocationsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetLocationsCompleted(this, new GetLocationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetLocationsAsync(string sessionKey)
    {
        this.GetLocationsAsync(sessionKey, null);
    }
    
    public void GetLocationsAsync(string sessionKey, object userState)
    {
        if ((this.onBeginGetLocationsDelegate == null))
        {
            this.onBeginGetLocationsDelegate = new BeginOperationDelegate(this.OnBeginGetLocations);
        }
        if ((this.onEndGetLocationsDelegate == null))
        {
            this.onEndGetLocationsDelegate = new EndOperationDelegate(this.OnEndGetLocations);
        }
        if ((this.onGetLocationsCompletedDelegate == null))
        {
            this.onGetLocationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocationsCompleted);
        }
        base.InvokeAsync(this.onBeginGetLocationsDelegate, new object[] {
                    sessionKey}, this.onEndGetLocationsDelegate, this.onGetLocationsCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IRompLoc.BeginCheckIn(string sessionKey, int locID, int entity_id, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCheckIn(sessionKey, locID, entity_id, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IRompLoc.EndCheckIn(System.IAsyncResult result)
    {
        return base.Channel.EndCheckIn(result);
    }
    
    private System.IAsyncResult OnBeginCheckIn(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string sessionKey = ((string)(inValues[0]));
        int locID = ((int)(inValues[1]));
        int entity_id = ((int)(inValues[2]));
        return ((IRompLoc)(this)).BeginCheckIn(sessionKey, locID, entity_id, callback, asyncState);
    }
    
    private object[] OnEndCheckIn(System.IAsyncResult result)
    {
        string retVal = ((IRompLoc)(this)).EndCheckIn(result);
        return new object[] {
                retVal};
    }
    
    private void OnCheckInCompleted(object state)
    {
        if ((this.CheckInCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CheckInCompleted(this, new CheckInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CheckInAsync(string sessionKey, int locID, int entity_id)
    {
        this.CheckInAsync(sessionKey, locID, entity_id, null);
    }
    
    public void CheckInAsync(string sessionKey, int locID, int entity_id, object userState)
    {
        if ((this.onBeginCheckInDelegate == null))
        {
            this.onBeginCheckInDelegate = new BeginOperationDelegate(this.OnBeginCheckIn);
        }
        if ((this.onEndCheckInDelegate == null))
        {
            this.onEndCheckInDelegate = new EndOperationDelegate(this.OnEndCheckIn);
        }
        if ((this.onCheckInCompletedDelegate == null))
        {
            this.onCheckInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckInCompleted);
        }
        base.InvokeAsync(this.onBeginCheckInDelegate, new object[] {
                    sessionKey,
                    locID,
                    entity_id}, this.onEndCheckInDelegate, this.onCheckInCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IRompLoc CreateChannel()
    {
        return new RompLocClientChannel(this);
    }
    
    private class RompLocClientChannel : ChannelBase<IRompLoc>, IRompLoc
    {
        
        public RompLocClientChannel(System.ServiceModel.ClientBase<IRompLoc> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginLearnerLogin(string user, string pass, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[2];
            _args[0] = user;
            _args[1] = pass;
            System.IAsyncResult _result = base.BeginInvoke("LearnerLogin", _args, callback, asyncState);
            return _result;
        }
        
        public ROMPLocationService.LoginResponse EndLearnerLogin(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            ROMPLocationService.LoginResponse _result = ((ROMPLocationService.LoginResponse)(base.EndInvoke("LearnerLogin", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetLocations(string sessionKey, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = sessionKey;
            System.IAsyncResult _result = base.BeginInvoke("GetLocations", _args, callback, asyncState);
            return _result;
        }
        
        public ROMPLocationService.FacilityCoordinates[] EndGetLocations(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            ROMPLocationService.FacilityCoordinates[] _result = ((ROMPLocationService.FacilityCoordinates[])(base.EndInvoke("GetLocations", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginCheckIn(string sessionKey, int locID, int entity_id, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[3];
            _args[0] = sessionKey;
            _args[1] = locID;
            _args[2] = entity_id;
            System.IAsyncResult _result = base.BeginInvoke("CheckIn", _args, callback, asyncState);
            return _result;
        }
        
        public string EndCheckIn(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("CheckIn", _args, result)));
            return _result;
        }
    }
}
